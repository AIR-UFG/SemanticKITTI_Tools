# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_data.ipynb.

# %% auto 0
__all__ = ['SemanticDataset']

# %% ../nbs/00_data.ipynb 1
import torch, os
import numpy as np
from torch.utils.data import Dataset
from PIL import Image

# %% ../nbs/00_data.ipynb 2
class SemanticDataset(Dataset):
    def __init__(self, image_path, mask_path, transforms=None):
        self.image_path = image_path
        self.mask_path = mask_path
        self.transforms = transforms
        self.image_filenames = os.listdir(image_path)
        self.mask_filenames = os.listdir(mask_path)

    def __len__(self):
        return len(self.image_filenames)

    def __getitem__(self, idx):
        img_name = os.path.join(self.image_path, self.image_filenames[idx])
        mask_name = os.path.join(self.mask_path, self.mask_filenames[idx])

        image = np.array(Image.open(img_name))
        mask = np.array(Image.open(mask_name))

        if self.transforms:
            image = self.transforms(image)
            mask = torch.from_numpy(mask.astype(np.int64))

        return image, mask
